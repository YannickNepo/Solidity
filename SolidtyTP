// SPDX-License-Identifier: MIT
pragma solidity ^0.8.10;

contract Estudiantes{

    string private _nombre;
    string private _apellido;
    string private _curso;
    address private _docente;
    bool private _aprobado;
    mapping(string => uint) notas_materias;
    string [] private materias;

    constructor(string memory nombre_,string memory apellido_, string memory curso_){
        _nombre = nombre_;
        _docente = msg.sender;
        _apellido = apellido_;
        _curso = curso_;
    }

     function apellido() public view returns (string memory){
        return _apellido;
     }

    function nombre_completo() public view returns (string memory){
        return string.concat(_nombre , _apellido);
    }

    function curso() public view returns (string memory){ 
    
        return _curso;
    }

    function set_nota_materia(string memory materia, uint nota) public{
        require(msg.sender == _docente, "Solo el docente puede setear las notas");
        notas_materias[materia] = nota;
        materias.push(materia);
    }

    function aprobo (string memory materia) public view returns (bool){
        if ( notas_materias[materia] >= 60)
        {
            return true;
        }
        else
        {
            return false;
        }
    }

function promedio () public view returns (uint){
        uint promediof;

        for(uint i = 0; i < materias.length; i++){
            promediof += notas_materias[materias[i]];

        }
        return promediof / materias.length;
    }

    

}


    